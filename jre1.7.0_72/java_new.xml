<component>
    <name>java</name>
    <description>Java Runtime Environment</description>
    <canBeEdited>0</canBeEdited>
    <selected>1</selected>
    <show>0</show>

    <!-- folders storing JRE -->
    <folderList>
        <folder>
            <description>Java binaries - Microsoft Windows</description>
            <destination>${installdir}/java</destination>
            <name>java_windows</name>
            <platforms>windows</platforms>
            <distributionFileList>
                <distributionFile>
                    <allowWildcards>1</allowWildcards>
                    <origin>java-windows/*</origin>
                </distributionFile>
            </distributionFileList>
	    <ruleList>
		<isTrue value="${java_install_jre}" />
	    </ruleList>
        </folder>
        <folder>
            <description>Java binaries - Linux</description>
            <destination>${installdir}/java</destination>
            <name>java_linux</name>
            <platforms>linux</platforms>
            <distributionFileList>
                <distributionFile>
                    <allowWildcards>1</allowWildcards>
                    <origin>java-linux/*</origin>
                </distributionFile>
            </distributionFileList>
	    <ruleList>
		<isTrue value="${java_install_jre}" />
	    </ruleList>
        </folder>
        <folder>
            <description>Java binaries - Linux-x64</description>
            <destination>${installdir}/java</destination>
            <name>java_linux_x64</name>
            <platforms>linux-x64</platforms>
            <distributionFileList>
                <distributionFile>
                    <allowWildcards>1</allowWildcards>
                    <origin>java-linux-x64/*</origin>
                </distributionFile>
            </distributionFileList>
	    <ruleList>
		<isTrue value="${java_install_jre}" />
	    </ruleList>
        </folder>
        <folder>
            <description>Java binaries - Solaris Sparc</description>
            <destination>${installdir}/java</destination>
            <name>java_solaris_sparc</name>
            <platforms>solaris-sparc</platforms>
            <distributionFileList>
                <distributionFile>
                    <allowWildcards>1</allowWildcards>
                    <origin>java-solaris-sparc/*</origin>
                </distributionFile>
            </distributionFileList>
	    <ruleList>
		<isTrue value="${java_install_jre}" />
	    </ruleList>
        </folder>
        <folder>
            <description>Java binaries - Solaris Intel</description>
            <destination>${installdir}/java</destination>
            <name>java_solaris_intel</name>
            <platforms>solaris-intel</platforms>
            <distributionFileList>
                <distributionFile>
                    <allowWildcards>1</allowWildcards>
                    <origin>java-solaris-intel/*</origin>
                </distributionFile>
            </distributionFileList>
	    <ruleList>
		<isTrue value="${java_install_jre}" />
	    </ruleList>
        </folder>
        <folder>
            <description>Java binaries - Mac OS X</description>
            <destination>${installdir}/java</destination>
            <name>java_osx</name>
            <platforms>osx</platforms>
            <distributionFileList>
                <distributionFile>
                    <allowWildcards>1</allowWildcards>
                    <origin>java-osx/*</origin>
                </distributionFile>
            </distributionFileList>
	    <ruleList>
		<isTrue value="${java_install_jre}" />
	    </ruleList>
        </folder>
    </folderList>

    <!-- parameters for creating Java launchers -->
    <parameterList>
	<stringParameter name="java_launcher_destination" value="${installdir}" ask="0" />
	<stringParameter name="java_launcher_binary_name" value="${project.shortName}-launcher.${platform_exec_suffix}" ask="0" />
	<stringParameter name="java_launcher_arguments" value="" ask="0" />
	<stringParameter name="java_launcher_vm_parameters" value="" ask="0" />
	<stringParameter name="java_launcher_jar" value="" ask="0" />
	<stringParameter name="java_launcher_mainClass" value="" ask="0" />
	<stringParameter name="java_launcher_classpath" value="" ask="0" />
	<stringParameter name="java_launcher_startmenu_shortcut_name" value="Launch ${project.fullName}" ask="0" />
	<booleanParameter name="java_launcher_add_to_win_startmenu" value="1" ask="0" />
	<booleanParameter name="java_install_jre" value="1" ask="0" />
	<booleanParameter name="java_create_launcher" value="1" ask="0" />
    </parameterList>

    <!-- set Java information -->
    <readyToInstallActionList>
	<if>
	    <actionList>
		<setInstallerVariable name="java_version_major" value="1.7" />
		<setInstallerVariable name="java_version" value="1.7.0" />
		<setInstallerVariable name="java_version_full" value="1.7.0_72" />
		<setInstallerVariable name="java_version_vendor" value="Sun" />
		<setInstallerVariable name="java_bitness" value="64" />
		<!-- determine Java binary name - javaw.exe on Windows, java otherwise -->
		<setInstallerVariable>
		    <name>java_executable</name>
		    <value>${installdir}/java/bin/java</value>
		</setInstallerVariable>
		<setInstallerVariable>
		    <name>java_executable</name>
		    <value>${installdir}/java/bin/javaw.exe</value>
		    <ruleList>
			<platformTest type="windows" />
		    </ruleList>
		</setInstallerVariable>
	    </actionList>
	    <elseActionList>
		<setInstallerVariable>
		    <name>java_executable</name>
		    <value></value>
		</setInstallerVariable>
	    </elseActionList>
	    <conditionRuleList>
		<isTrue value="${java_install_jre}" />
	    </conditionRuleList>
	</if>
    </readyToInstallActionList>

    <postInstallationActionList>
        <!-- change permissions of all binaries -->
        <changePermissions files="${installdir}/java/bin/*" permissions="0755" abortOnError="0" showMessageOnError="0">
            <ruleList>
                <fileExists path="${installdir}/java/bin" />
                <platformTest negate="1" type="windows" />
            </ruleList>
        </changePermissions>

        <!-- Create symbolic links on various platforms -->
        <actionGroup>
            <ruleList>
                <platformTest type="linux" />
            </ruleList>
            <actionList>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/jre/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/bin" />
                        <fileExists path="${installdir}/java/jre/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/i386/client/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/i386/client" />
                        <fileExists path="${installdir}/java/jre/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/i386/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/i386/server" />
                        <fileExists path="${installdir}/java/jre/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/i386/client/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/i386/client" />
                        <fileExists path="${installdir}/java/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/i386/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/i386/server" />
                        <fileExists path="${installdir}/java/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
            </actionList>
        </actionGroup>

        <actionGroup>
            <ruleList>
                <platformTest type="linux-x64" />
            </ruleList>
            <actionList>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/jre/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/bin" />
                        <fileExists path="${installdir}/java/jre/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/amd64/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/amd64/server" />
                        <fileExists path="${installdir}/java/jre/lib/amd64/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/amd64/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/amd64/server" />
                        <fileExists path="${installdir}/java/lib/amd64/libjsig.so" />
                    </ruleList>
                </createSymLink>
            </actionList>
        </actionGroup>

        <actionGroup>
            <ruleList>
                <platformTest type="solaris-intel" />
            </ruleList>
            <actionList>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/jre/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/bin" />
                        <fileExists path="${installdir}/java/jre/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/i386/client/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/i386/client" />
                        <fileExists path="${installdir}/java/jre/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/i386/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/i386/server" />
                        <fileExists path="${installdir}/java/jre/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/i386/client/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/i386/client" />
                        <fileExists path="${installdir}/java/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/i386/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/i386/server" />
                        <fileExists path="${installdir}/java/lib/i386/libjsig.so" />
                    </ruleList>
                </createSymLink>
            </actionList>
        </actionGroup>

        <actionGroup>
            <ruleList>
                <platformTest type="solaris-sparc" />
            </ruleList>
            <actionList>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/jre/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/bin" />
                        <fileExists path="${installdir}/java/jre/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/sparc/client/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/sparc/client" />
                        <fileExists path="${installdir}/java/jre/lib/sparc/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="libjdgaSUNWffb.so" linkName="${installdir}/java/jre/lib/sparc/libjdgaSUNWafb.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/sparc" />
                        <fileExists path="${installdir}/java/jre/lib/sparc/libjdgaSUNWffb.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/sparc/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/jre/lib/sparc/server" />
                        <fileExists path="${installdir}/java/jre/lib/sparc/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="jcontrol" linkName="${installdir}/java/bin/ControlPanel">
                    <ruleList>
                        <fileExists path="${installdir}/java/bin" />
                        <fileExists path="${installdir}/java/bin/jcontrol" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/sparc/client/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/sparc/client" />
                        <fileExists path="${installdir}/java/lib/sparc/libjsig.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="libjdgaSUNWffb.so" linkName="${installdir}/java/lib/sparc/libjdgaSUNWafb.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/sparc" />
                        <fileExists path="${installdir}/java/lib/sparc/libjdgaSUNWffb.so" />
                    </ruleList>
                </createSymLink>
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/lib/sparc/server/libjsig.so">
                    <ruleList>
                        <fileExists path="${installdir}/java/lib/sparc/server" />
                        <fileExists path="${installdir}/java/lib/sparc/libjsig.so" />
                    </ruleList>
                </createSymLink>
            </actionList>
        </actionGroup>


	<!-- create Java launcher using preferred JRE -->
	<createJavaLaunchers>
	    <destination>${java_launcher_destination}</destination>
	    <explanation>${msg(Installer.Java.CreateLaunchers.Explanation)}</explanation>
	    <progressText>${msg(Installer.Java.CreateLaunchers.Text)}</progressText>
	    <javaLauncherList>
		<javaLauncher>
		    <allowCommandLineArguments>1</allowCommandLineArguments>
		    <arguments>${java_launcher_arguments}</arguments>
		    <binaryName>${java_launcher_binary_name}</binaryName>
		    <classpath>${java_launcher_classpath}</classpath>
		    <jarFile>${java_launcher_jar}</jarFile>
		    <mainClass>${java_launcher_mainClass}</mainClass>
		    <preferredJavaBinary>${java_executable}</preferredJavaBinary>
		    <runInConsole>0</runInConsole>
		    <vmParameters>${java_launcher_vm_parameters}</vmParameters>
		    <windowsResourceFileVersion>${project.version}</windowsResourceFileVersion>
		    <workingDirectory>${java_launcher_destination}</workingDirectory>
		</javaLauncher>
	    </javaLauncherList>
	    <ruleList>
                <isTrue value="${java_create_launcher}"/>
	    </ruleList>
	</createJavaLaunchers>

	<!-- create start menu shortcut(s) on Microsoft Windows -->
	<actionGroup>
	    <actionList>
		<setInstallerVariable>
		    <name>java_launcher_startmenudirectory</name>
		    <value>${windows_folder_programs}</value>
		</setInstallerVariable>
		<setInstallerVariable>
		    <name>java_launcher_startmenudirectory</name>
		    <value>${windows_folder_common_programs}</value>
		    <ruleList>
			<compareText logic="does_not_equal" text="${project.installationScope}" value="user"/>
			<isTrue value="${installer_is_root_install}"/>
		    </ruleList>
		</setInstallerVariable>
		<setInstallerVariable>
		    <name>java_launcher_startmenudirectory</name>
		    <value>${java_launcher_startmenudirectory}/${project.startMenuGroupName}</value>
		</setInstallerVariable>
		<createDirectory>
		    <path>${java_launcher_startmenudirectory}</path>
		</createDirectory>
		<createShortcuts>
		    <destination>${java_launcher_startmenudirectory}</destination>
		    <explanation>${msg(Installer.Java.CreateLauncherShortcuts.Explanation)}</explanation>
		    <progressText>${msg(Installer.Java.CreateLauncherShortcuts.Text)}</progressText>
		    <shortcutList>
			<startMenuShortcut>
			    <comment>${java_launcher_binary_name}</comment>
			    <name>${java_launcher_startmenu_shortcut_name}</name>
			    <runAsAdmin>0</runAsAdmin>
			    <runInTerminal>0</runInTerminal>
			    <windowsExec>${java_launcher_destination}/${java_launcher_binary_name}</windowsExec>
			    <windowsExecArgs></windowsExecArgs>
			    <windowsIcon></windowsIcon>
			    <windowsPath>${java_launcher_destination}</windowsPath>
			</startMenuShortcut>
		    </shortcutList>
		</createShortcuts>
	    </actionList>
	    <ruleList>
		<platformTest type="windows"/>
		<isTrue value="${java_launcher_add_to_win_startmenu}"/>
                <isTrue value="${java_create_launcher}"/>
	    </ruleList>
	</actionGroup>
    </postInstallationActionList>
</component>
